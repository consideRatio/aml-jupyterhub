{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "AML-JupyterHub",
            "metadata": {
                "description": "Virtual machine name. Use a meaningful name."
            }
        },
        "adminUsername": {
            "type": "string",
	    "defaultValue": "aml-jupyterhub-admin",
            "metadata": {
                "description": "Username for admin user on the VM."
            }
        },
	"adminPublicKey": {
	    "type": "string",
        "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDpiiajUDBl6A4CdPyVV+bgKEK+UozLDkLS8ghwIpWzCvBaHqLNHentVEF2kqXDS0TdEuk2DTV3QWomZvZkPi/aB7jQP595GW9vPiQcQJJZGCqQRozvKYTIfICBCSpFAvuktjebnthvXHWoqhTYKL89mGQi6czsoQNalsqNSeyZ5cLwnULq9Bh193dT4XN/IKVwwIfQNY0LUp/yXz1Md0PbgfFnRknLnuB0hnUNITka7W/NHh46D7uXf87fbNOLErL22B4uwzEp0apBE4F0F2R8BUCyBbjSEl2rdunO2seQx8XGqOQLUkiW2tFDeTAYZL9Hw8dmTZIEGTIfcusF7rf3 pierocoronica@Pieros-MBP",
	    "metadata": {
		"description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
	    }
	},
	"domainNameLabel": {
	    "type": "string",
        "defaultValue": "pierotest",
	    "metadata": {
		"description": "The URL for the spawner will be 'domainNameLabel.location.cloudapp.azure.com'."
	    }
	},
	"tenantId": {
	    "type": "string",
	    "defaultValue": "Unknown",
	    "metadata": {
		"description": "The ID of the Azure Active Directory tenant."
	    }
	},
	"clientId": {
	    "type": "string",
	    "defaultValue": "Unknown",
	    "metadata": {
		"description": "The ID of this client (App) in Azure Active Directory.  If left as 'unknown', and if you have 'owner' role in the subscription, a Service Principal will be created for you."
	    }
	},
	"clientSecret": {
	    "type": "string",
	    "defaultValue": "Unknown",
	    "metadata": {
		"description": "The secret of this client (App) in Azure Active Directory.  If left as 'unknown', and if you have 'owner' role in the subscription, a Service Principal will be created for you."
	    }
	}
    },
    "variables": {
        "publicIPAddressName": "jupyter-PublicIP",
        "publicIPAddressType": "Static",
        "domainNameLabel": "[parameters('domainNameLabel')]",
        "networkSecurityGroupName": "jupyter-vm-nsg",
        "subnetName": "Subnet",
        "subnet1Prefix": "10.0.0.0/24",
        "virtualNetworkName": "jupyter-VNET",
        "addressPrefix": "10.0.0.0/16",
        "vmName": "[parameters('virtualMachineName')]",
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "vnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
        "nicName": "jupyter-VMNic",
        "dataDiskResourcesName": "[concat(variables('vmName'), '-datadisk1')]",
        "managedDiskRef": "[resourceId('Microsoft.Compute/disks', variables('dataDiskResourcesName'))]",
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'jupyter')]",
        "scriptLocation": "https://raw.githubusercontent.com/informatics-lab/aml-jupyterhub/feature/deploy-to-azure-button/deployment_scripts/install.sh",
        "runScriptLocation": "https://raw.githubusercontent.com/informatics-lab/aml-jupyterhub/feature/deploy-to-azure-button/deployment_scripts/run.sh",
        "userAssignedIDName": "uaid-vm",
        "bootstrapRoleAssignmentId": "[guid(concat(resourceGroup().id, 'contributor'))]",
        "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-06-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTP",
                        "properties": {
                            "priority": 300,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "80"
                        }
                    },
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 310,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    },
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 340,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    },
		    {
                        "name": "Jupyter",
                        "properties": {
                            "priority": 350,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "8000"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-06-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-06-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('domainNameLabel')]"
                }
            },
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-06-01",
            "name": "[variables('nicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {
            }
        },
        {
            "type": "Microsoft.Compute/disks",
            "name": "[variables('dataDiskResourcesName')]",
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "diskSizeGB": "1024",
                "creationData": {
                    "createOption": "empty"
                }
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('userAssignedIDName')]",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('bootstrapRoleAssignmentId')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIDName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIDName')), '2018-11-30').principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[variables('vmName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                    "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('userAssignedIDName'))]": {}
                    }
                },
            "tags": {
                "displayName": "aml-jupyterhub"
            },
            "dependsOn": [
                "[variables('managedDiskRef')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage"
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "dataDisks": [
                        {
                            "name": "[variables('dataDiskResourcesName')]",
                            "lun": 0,
                            "createOption": "attach",
                            "managedDisk": {
                                "id": "[variables('managedDiskRef')]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2019-07-01",
                    "name": "[concat(variables('vmName'),'/installscript')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', concat(variables('vmName')))]"
                    ],
                    "tags": {
                        "displayName": "Execute Jupyter install script"
                    },
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true
                    }
                },
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('vmName'),'/ManagedIdentityExtensionForLinux')]",
                    "apiVersion": "2018-06-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.ManagedIdentity",
                        "type": "ManagedIdentityExtensionForLinux",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "port": 50342
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}
